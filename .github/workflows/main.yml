name: Deploy Kittygram

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
      - name: Run tests
        run: |
          python backend/manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push images
        run: |
          touch .env
          echo "${{ secrets.DOTENV_FILE }}" >> .env
          docker compose build
          docker compose push

  deploy:    
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/d1zero/kittygram"

      - name: Pull and restart containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            touch kittygram/.env
            echo "${{ secrets.DOTENV_FILE }}" >> kittygram/.env
            docker compose -f kittygram/docker-compose.yml pull
            docker compose -f kittygram/docker-compose.yml down
            docker compose -f kittygram/docker-compose.yml up -d

  auto_tests:
    name: Auto Tests
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r ./backend/requirements.txt 

      - name: Run tests
        run: python -m pytest

  telegram_notification:
    name: Telegram deploy notification
    runs-on: ubuntu-latest
    needs: auto_tests
    steps:
      - name: Send success message
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} успешно задеплоил ${{ github.ref_name }}

      - name: Send failed message
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} неуспешно задеплоил ${{ github.ref_name }} ❌