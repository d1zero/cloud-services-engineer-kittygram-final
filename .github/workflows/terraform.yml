name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        options:
          - plan
          - apply
          - destroy 

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan
        env:
          TF_VAR_yc_token: ${{ secrets.YC_TOKEN }}
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_pub_key: ${{ secrets.YC_SSH_PUB_KEY }}

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve
        env:
          TF_VAR_yc_token: ${{ secrets.YC_TOKEN }}
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_pub_key: ${{ secrets.YC_SSH_PUB_KEY }}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
        env:
          TF_VAR_yc_token: ${{ secrets.YC_TOKEN }}
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_pub_key: ${{ secrets.YC_SSH_PUB_KEY }}
